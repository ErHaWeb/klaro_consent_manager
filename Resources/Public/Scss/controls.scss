@import './vars';

.cm-language-select,
.cm-theme-select,
.cm-purpose-select {

    @include var(border-radius, border-radius);
    @include var(background-color, white1);
    @include var(border-style, border-style);
    @include var(border-width, border-width);
    @include var(border-color, light2);

    box-shadow: $cm-box-shadow-light-sm;
    padding: map-get($cm-space, md);
    margin-bottom: map-get($cm-space, md);
    
    ul.cm-languages,
    ul.cm-themes,
    ul.cm-purposes {
        margin-top: -4px;

        li {
            @include var(color, light1);
            @include var(border-radius, border-radius);
            @include var(border-width, border-width);
            @include var(border-style, border-style);
            @include var(border-color, green2);
            @include var(background-color, green1);

            display: inline-block;
            margin-right: 4px;
            margin-top: 4px;
            padding: 2px 4px;
            font-size: 0.9em;

            a {
                @include var(color, white1);
            }
        }
    }
}

.cm-search-select {

    margin-top: map-get($cm-space, md);
    margin-bottom: map-get($cm-space, md);
    display: flex;

    input:not(:focus) ~ .cm-candidates {
        display: none;
    }

    .cm-candidates:hover {
        display: block !important;
    }

    .cm-candidates {

        @include var(background-color, white1);
        @include var(border-radius, border-radius);
        @include var(border-width, border-width);
        @include var(border-style, border-style);
        @include var(border-color, white2);

        position: absolute;
        top: 55px;
        left: 0;
        z-index: 10;
        margin-bottom: 10px;
        width: 100%;

        .cm-candidate {
            @include var(border-bottom-width, border-width);
            @include var(border-bottom-style, border-style);
            @include var(border-bottom-color, dark3);
            padding: map-get($cm-space, md);
            cursor: pointer;

            p {
                @include var(color, dark2);
                font-size: 0.9em;
            }

            &:last-child {
                border-bottom-style: none;
            }
        }
    }
}

.cm-obj-selector {
    position: relative;
    display: inline-block;
    margin-bottom: 10px;
    margin-right: 20px;
    width: 100%;
    height: 40px;
    overflow: visible;

    @media (min-width: $cm-tablet) {
        width: 300px;
    }

    span.cm-obj-selector-more {
        display: block;
        position: absolute;
        right: 0.5em;
        padding-top: 0.6em;
        padding-right: 0.3em;
        z-index: 2;
        pointer-events: none;
        transform: scaleY(0.6) scaleX(0.8);
        font-weight: 800;
    }

    ul {

        @include var(background-color, white1);

        top: 0;
        left: 0;
        z-index: 1;
        margin: 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;

        li {

            @include var(background-color, white1);
            @include var(border-bottom-style, border-style);
            @include var(border-bottom-width, border-width);
            @include var(border-bottom-color, white2);

            box-shadow: $cm-box-shadow-dark-sm;
            margin: 0;
            width: auto;
            display: none;
            width: 100%;
            order: 2;

            &:last-child {
                border-bottom-style: none;
            }

            &.cm-obj-is-active {
                @include var(background-color, light2);
                display: flex;
                order: 1;
            }

            a.cm-obj-item {
                width: 100%;
                padding: 8px;
                padding-right: 40px;
            }
        }

        li.cm-obj-add {
            padding: 8px;
            display: none;
            justify-content: space-between;
            order: 3;

            input {
                @include var(color, dark1);
                @include var(border-color, dark2);
                @include var(border-radius, border-radius);
                @include var(border-style, border-style);
                @include var(border-width, border-width);
                flex-grow: 1;
                flex-shrink: 1;
                padding: 4px;
                font-size: 0.9em;
            }

            a.cm-btn {
                @include var(color, white1);
                @include var(border-radius, border-radius);
                @include var(background-color, dark3);
                padding: 8px;
                flex-grow: 0;
                flex-shrink: 0;
                margin-left: 10px;
                width: auto;
                display: inline-block;
            }
        }

        &:not(.cm-is-active) {
            li.cm-obj-is-active {
                @include var(background-color, white1);
            }
        }

        &.cm-is-active {
            z-index: 4;

            li {
                display: flex;
            }
        }
    }
}

.cm-switch {
    padding: 12px;
}

p.cm-description {
    @include var(color, dark2);
    font-size: 0.9em;
    padding-top: 2px;
    margin-bottom: 4px;
}

.cm-select {
    margin-top: 16px;

    select {

        @include var(background-color, white1);
        @include var(color, dark2);
        @include var(border-radius, border-radius);
        @include var(border-style, border-style);
        @include var(border-color, white2);

        display: block;
        width: 100%;
        padding: 12px 5px;
        font-size: 0.9em;
        text-indent: 5px;

        &[disabled] {
            @include var(background-color, light2);
        }

    }
}

.cm-retracting-label-input {
    display: inline-block; // Needed for a bug in Chrome
    position: relative;
    width: 100%; // Needed for a bug in Chrome
    padding: 10px 0 6px;
    margin-top: 4px;

    > .cm-label {
        @include var(background-color, white1);
        @include var(border-radius, border-radius);
        @include var(border-style, border-style);
        @include var(border-width, border-width);
        @include var(border-color, light2);
        position: absolute;
        top: 16px;
        left: 8px;
        white-space: nowrap;
        text-overflow: ellipsis;
        max-width: calc(100% - (2 * 8px));
        overflow: hidden;
        pointer-events: none;
        transition: transform 150ms cubic-bezier(0.47, 0, 0.74, 0.71),
            opacity 150ms cubic-bezier(0.47, 0, 0.74, 0.71),
            color 150ms cubic-bezier(0.47, 0, 0.74, 0.71);
        padding: 0 8px;
        transform: scale(0.75) translateX(-16%) translateY(-26px);
    }
    // currently we disable the retracting part
    /*
    > .cm-input:not([disabled]):placeholder-shown:not(:focus) + .cm-label {
        transform: none;
        border: none;
        color: #888;
    }
*/
}

.cm-input {

    @include var(border-radius, border-radius);
    @include var(background-color, light1);
    @include var(border-style, border-style);
    @include var(border-width, border-width);
    @include var(border-color, green1);

    // For some reason, textarea tries to use a system font.
    font-size: 0.9em;

    box-sizing: border-box;
    padding: 12px 18px;
    width: 100%;

    &[disabled] {
        @include var(background-color, light2);
    }
}
