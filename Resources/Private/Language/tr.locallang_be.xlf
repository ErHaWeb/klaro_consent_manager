<?xml version="1.0" encoding="UTF-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" original="EXT:klaro_consent_manager/Resources/Private/Language/locallang_db.xlf" datatype="plaintext" product-name="lang" date="2025-10-06T09:33:58+02:00" target-language="tr">
    <header/>
    <body>
      <trans-unit id="sets.klaroconsentmanager.label">
        <source>Klaro! Consent Manager</source>
        <target state="needs-translation">Klaro! Consent Manager</target>
      </trans-unit>
      <trans-unit id="extmng.replaceUrl.show">
        <source>Replace-URL to show Klaro! Consent Management:Links targeting this placeholder URL are automatically modified before HTML output. The URL is replaced with CSP-compliant JavaScript to trigger the Klaro! Consent Management modal.</source>
        <target state="needs-translation">Replace-URL to show Klaro! Consent Management:Links targeting this placeholder URL are automatically modified before HTML output. The URL is replaced with CSP-compliant JavaScript to trigger the Klaro! Consent Management modal.</target>
      </trans-unit>
      <trans-unit id="extmng.replaceUrl.reset">
        <source>Replace-URL to reset Klaro! Consent Management:Links targeting this placeholder URL are automatically changed before HTML output. The URL is replaced with CSP-compliant JavaScript to reset the Klaro! Consent Management settings and then trigger the modal.</source>
        <target state="needs-translation">Replace-URL to reset Klaro! Consent Management:Links targeting this placeholder URL are automatically changed before HTML output. The URL is replaced with CSP-compliant JavaScript to reset the Klaro! Consent Management settings and then trigger the modal.</target>
      </trans-unit>
      <trans-unit id="extmng.klaroConfigurationPath">
        <source>Klaro! Configuration Path:If this path is set, it is used to use the Klaro! configuration by external applications. For example, if a WordPress installation is to use the configuration created in TYPO3, this path can be called up. Example: "/klaro-config.js"</source>
        <target state="needs-translation">Klaro! Configuration Path:If this path is set, it is used to use the Klaro! configuration by external applications. For example, if a WordPress installation is to use the configuration created in TYPO3, this path can be called up. Example: "/klaro-config.js"</target>
      </trans-unit>
      <trans-unit id="constants.customcategory.plugin.tx_klaroconsentmanager">
        <source>Klaro! Consent Manager</source>
        <target state="needs-translation">Klaro! Consent Manager</target>
      </trans-unit>
      <trans-unit id="constants.subcategory.fluidrootpaths">
        <source>Templates</source>
        <target state="needs-translation">Templates</target>
      </trans-unit>
      <trans-unit id="constants.subcategory.resources">
        <source>Resources</source>
        <target state="needs-translation">Resources</target>
      </trans-unit>
      <trans-unit id="constants.subcategory.settings">
        <source>Settings</source>
        <target state="needs-translation">Settings</target>
      </trans-unit>
      <trans-unit id="constants.view.templateRootPath">
        <source>Path to template root (FE)</source>
        <target state="needs-translation">Path to template root (FE)</target>
      </trans-unit>
      <trans-unit id="constants.view.partialRootPath">
        <source>Path to template partials (FE)</source>
        <target state="needs-translation">Path to template partials (FE)</target>
      </trans-unit>
      <trans-unit id="constants.view.layoutRootPath">
        <source>Path to template layouts (FE)</source>
        <target state="needs-translation">Path to template layouts (FE)</target>
      </trans-unit>
      <trans-unit id="constants.settings.css.klaro-default">
        <source>Klaro CSS</source>
        <target state="needs-translation">Klaro CSS</target>
      </trans-unit>
      <trans-unit id="constants.settings.css.klaro-custom">
        <source>Custom additions for Klaro CSS</source>
        <target state="needs-translation">Custom additions for Klaro CSS</target>
      </trans-unit>
      <trans-unit id="constants.settings.javascript.klaro-default">
        <source>Klaro JavaScript</source>
        <target state="needs-translation">Klaro JavaScript</target>
      </trans-unit>
      <trans-unit id="constants.settings.contextualconsent.replaceAttributes">
        <source>Replace attributes:Comma-separated list of attributes that should be automatically replaced within the content element of the contextual consent</source>
        <target state="needs-translation">Replace attributes:Comma-separated list of attributes that should be automatically replaced within the content element of the contextual consent</target>
      </trans-unit>
      <trans-unit id="constants.settings.contextualconsent.mainSectionOnly">
        <source>Main section only:Activate this option if the contextual consent box should only be limited to the main content (without heading and footer).</source>
        <target state="needs-translation">Main section only:Activate this option if the contextual consent box should only be limited to the main content (without heading and footer).</target>
      </trans-unit>
      <trans-unit id="constants.settings.configuration.disabled">
        <source>Disable Klaro Consent Management</source>
        <target state="needs-translation">Disable Klaro Consent Management</target>
      </trans-unit>
    </body>
  </file>
</xliff>
